class TrieNode{
    bool isTerminal = false;
    vector<TrieNode*> child[26];
    public:
    TrieNode(){
        for(int i=0 ; i<26 ; i++){
            child[i]=NULL;
        }
    }
};
void addWord(string s, TrieNode* root){
    for(int i=0 ; i<s.size() ; i++){
        if(root->child[s[i]-'a']==NULL){
            root->child[s[i]-'a'] = new TrieNode();
        }
        root = root->child[s[i]-'a'];
    }
    root->isTerminal=true;
}
bool ifExists(string s, TrieNode* root){
    for(int i=0 ; i<s.size() ; i++){
        if(root->child[s[i]-'a']==NULL){
            return false;
        }
        root = root->child[s[i]-'a'];
    }
    if(root->isTerminal)return true;
    return false;
}
